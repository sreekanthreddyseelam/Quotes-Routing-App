{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\Quotes-Routingproject\\\\src\\\\pages\\\\NewQuote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport useHttp from \"../hooks/hooks/use-http\";\nimport { addQuote } from \"../lib/lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewQuote() {\n  _s();\n\n  const [sendRequest, status] = useHttp(addQuote);\n  const history = useHistory();\n  useEffect(() => {\n    if (status === 'completed') {\n      history.push(\"/Allquotes\");\n    }\n  }, [status, history]);\n\n  const addQuoteHandler = quoteData => {\n    sendRequest(quoteData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"NewQuotes component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuoteForm, {\n      onAddQuote: addQuoteHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewQuote, \"L6FIyJNPT2o7QABtvO3dxFC8TXw=\", false, function () {\n  return [useHttp, useHistory];\n});\n\n_c = NewQuote;\nexport default NewQuote;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewQuote\");","map":{"version":3,"sources":["E:/react/Quotes-Routingproject/src/pages/NewQuote.js"],"names":["React","useEffect","useHistory","QuoteForm","useHttp","addQuote","NewQuote","sendRequest","status","history","push","addQuoteHandler","quoteData"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,QAAT,QAAyB,gBAAzB;;;AAGA,SAASC,QAAT,GAAoB;AAAA;;AACnB,QAAM,CAACC,WAAD,EAAcC,MAAd,IAAuBJ,OAAO,CAACC,QAAD,CAApC;AACC,QAAMI,OAAO,GAAGP,UAAU,EAA1B;AACAD,EAAAA,SAAS,CAAC,MAAI;AAChB,QAAIO,MAAM,KAAK,WAAf,EAA2B;AACzBC,MAAAA,OAAO,CAACC,IAAR,CAAa,YAAb;AACD;AAEE,GALQ,EAKP,CAACF,MAAD,EAAQC,OAAR,CALO,CAAT;;AAMA,QAAME,eAAe,GAAIC,SAAD,IAAe;AACtCL,IAAAA,WAAW,CAACK,SAAD,CAAX;AAGA,GAJD;;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,UAAU,EAAED;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GApBQL,Q;UACqBF,O,EACZF,U;;;KAFTI,Q;AAsBT,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport useHttp from \"../hooks/hooks/use-http\";\r\nimport { addQuote } from \"../lib/lib/api\";\r\n\r\n\r\nfunction NewQuote() {\r\n const [sendRequest, status]= useHttp(addQuote)\r\n  const history = useHistory();\r\n  useEffect(()=>{\r\nif (status === 'completed'){\r\n  history.push(\"/Allquotes\");\r\n}\r\n\r\n  },[status,history])\r\n  const addQuoteHandler = (quoteData) => {\r\n   sendRequest(quoteData)\r\n\r\n    \r\n  };\r\n  return (\r\n    <div>\r\n      <h1>NewQuotes component</h1>\r\n      <QuoteForm onAddQuote={addQuoteHandler}></QuoteForm>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewQuote;\r\n"]},"metadata":{},"sourceType":"module"}