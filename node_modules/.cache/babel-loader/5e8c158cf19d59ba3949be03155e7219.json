{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\Quotes-Routingproject\\\\src\\\\pages\\\\AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/hooks/use-http\";\nimport { getAllQuotes } from \"../lib/lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: 'q1',\n  author: 'Sreekanth',\n  text: ' Dont comment bad code - rewrite it'\n}, {\n  id: 'q2',\n  author: 'Reddy',\n  text: ' One main scrappy software is another mans full time job'\n}];\n\nfunction AllQuotes() {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(QuoteList, {\n      quotes: loadedQuotes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AllQuotes, \"Sn2QGCbJGjm/GjrACrT5qb4lH3A=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"sources":["E:/react/Quotes-Routingproject/src/pages/AllQuotes.js"],"names":["React","useEffect","NoQuotesFound","QuoteList","LoadingSpinner","useHttp","getAllQuotes","DUMMY_QUOTES","id","author","text","AllQuotes","sendRequest","status","data","loadedQuotes","error","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,aAAP,MAA0B,oCAA1B;AACA,OAAQC,SAAR,MAAwB,gCAAxB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAGA,MAAMC,YAAY,GAAG,CACnB;AAACC,EAAAA,EAAE,EAAC,IAAJ;AAAUC,EAAAA,MAAM,EAAE,WAAlB;AAA+BC,EAAAA,IAAI,EAAC;AAApC,CADmB,EAEnB;AAACF,EAAAA,EAAE,EAAC,IAAJ;AAAUC,EAAAA,MAAM,EAAE,OAAlB;AAA2BC,EAAAA,IAAI,EAAC;AAAhC,CAFmB,CAArB;;AAMA,SAASC,SAAT,GAAqB;AAAA;;AACpB,QAAK;AAACC,IAAAA,WAAD;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA,IAAI,EAAEC,YAA5B;AAA0CC,IAAAA;AAA1C,MAAkDX,OAAO,CAACC,YAAD,EAAc,IAAd,CAA9D;AACAL,EAAAA,SAAS,CAAC,MAAI;AACZW,IAAAA,WAAW;AACZ,GAFQ,EAEP,CAACA,WAAD,CAFO,CAAT;;AAIA,MAAGC,MAAM,KAAK,SAAd,EAAwB;AACtB,wBAAO;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BAA0B,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACF,MAAGG,KAAH,EAAS;AACP,wBAAO;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA,gBAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAGH,MAAM,KAAG,WAAT,KAAyB,CAACE,YAAD,IAAiBA,YAAY,CAACE,MAAb,KAAwB,CAAlE,CAAH,EAAwE;AACtE,wBAAO;AAAA,6BAAG,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEC,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAtBQJ,S;UAC+CN,O;;;KAD/CM,S;AAwBT,eAAeA,SAAf","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\nimport  QuoteList  from \"../components/quotes/QuoteList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/lib/api\";\r\n\r\n\r\nconst DUMMY_QUOTES = [\r\n  {id:'q1', author: 'Sreekanth', text:' Dont comment bad code - rewrite it'},\r\n  {id:'q2', author: 'Reddy', text:' One main scrappy software is another mans full time job'},\r\n  \r\n]\r\n\r\nfunction AllQuotes() {\r\n const{sendRequest, status, data: loadedQuotes, error}= useHttp(getAllQuotes,true)\r\n useEffect(()=>{\r\n   sendRequest()\r\n },[sendRequest])\r\n\r\n if(status === 'pending'){\r\n   return <div className=\"centered\"><LoadingSpinner /></div>\r\n }\r\nif(error){\r\n  return <p className=\"centered focused\">{error}</p>\r\n}\r\n\r\nif(status==='completed' && (!loadedQuotes || loadedQuotes.length === 0)){\r\n  return <p><NoQuotesFound/></p>\r\n}\r\n\r\n  return (\r\n    <div>\r\n      <QuoteList quotes={loadedQuotes}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllQuotes;\r\n"]},"metadata":{},"sourceType":"module"}