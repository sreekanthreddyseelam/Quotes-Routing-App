{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\Quotes-Routingproject\\\\src\\\\components\\\\quotes\\\\QuoteList.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, QuotesB) => {\n    if (ascending) {\n      return quoteA.id > QuotesB.id ? 1 : -1;\n    } else {\n      return quoteA.id < QuotesB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = props => {\n  _s();\n\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingHandler = queryParams.get('sort') === 'asc';\n  const sortedQuotes = sortQuotes(props.quotes, isSortingHandler);\n\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingHandler ? 'desc ' : 'asc'}`\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeSortingHandler,\n        children: [\"Sort \", isSortingHandler ? 'Descending' : 'Ascending']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: sortedQuotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteList, \"azjqGSEfmvz5+G/YRUZm7OceOpI=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = QuoteList;\nexport default QuoteList;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"sources":["E:/react/Quotes-Routingproject/src/components/quotes/QuoteList.js"],"names":["Fragment","useHistory","useLocation","QuoteItem","classes","sortQuotes","quotes","ascending","sort","quoteA","QuotesB","id","QuoteList","props","history","location","queryParams","URLSearchParams","search","isSortingHandler","get","sortedQuotes","changeSortingHandler","push","pathname","sorting","list","map","quote","author","text"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,cAAxC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAGA,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,SAAT,KAAuB;AACxC,SAAOD,MAAM,CAACE,IAAP,CAAY,CAACC,MAAD,EAAQC,OAAR,KAAkB;AACnC,QAAGH,SAAH,EAAc;AACZ,aAAOE,MAAM,CAACE,EAAP,GAAYD,OAAO,CAACC,EAApB,GAAyB,CAAzB,GAA6B,CAAC,CAArC;AAED,KAHD,MAGM;AACJ,aAAOF,MAAM,CAACE,EAAP,GAAYD,OAAO,CAACC,EAApB,GAAyB,CAAzB,GAA6B,CAAC,CAArC;AACD;AACF,GAPM,CAAP;AAQD,CATD;;AAeA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,OAAO,GAACb,UAAU,EAAxB;AACA,QAAMc,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,WAAW,GAAE,IAAIC,eAAJ,CAAoBF,QAAQ,CAACG,MAA7B,CAAnB;AACA,QAAMC,gBAAgB,GAAEH,WAAW,CAACI,GAAZ,CAAgB,MAAhB,MAA2B,KAAnD;AACA,QAAMC,YAAY,GAAGhB,UAAU,CAACQ,KAAK,CAACP,MAAP,EAAea,gBAAf,CAA/B;;AAEA,QAAMG,oBAAoB,GAAC,MAAI;AAC7BR,IAAAA,OAAO,CAACS,IAAR,CAAa;AAEXC,MAAAA,QAAQ,EAAGT,QAAQ,CAACS,QAFT;AAGXN,MAAAA,MAAM,EAAI,SAASC,gBAAgB,GAAG,OAAH,GAAa,KAAO;AAH5C,KAAb;AAYD,GAbD;;AAcA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEf,OAAO,CAACqB,OAAxB;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAEH,oBAAjB;AAAA,4BAA6CH,gBAAgB,GAAG,YAAH,GAAkB,WAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAI,MAAA,SAAS,EAAEf,OAAO,CAACsB,IAAvB;AAAA,gBACGL,YAAY,CAACM,GAAb,CAAkBC,KAAD,iBAChB,QAAC,SAAD;AAEE,QAAA,EAAE,EAAEA,KAAK,CAACjB,EAFZ;AAGE,QAAA,MAAM,EAAEiB,KAAK,CAACC,MAHhB;AAIE,QAAA,IAAI,EAAED,KAAK,CAACE;AAJd,SACOF,KAAK,CAACjB,EADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAtCD;;GAAMC,S;UACUX,U,EACGC,W;;;KAFbU,S;AAwCN,eAAeA,SAAf","sourcesContent":["import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA,QuotesB)=>{\n    if(ascending) {\n      return quoteA.id > QuotesB.id ? 1 : -1;\n\n    }else {\n      return quoteA.id < QuotesB.id ? 1 : -1;\n    }\n  })\n}\n\n\n\n\n\nconst QuoteList = (props) => {\n  const history=useHistory();\n  const location = useLocation();\n  const queryParams= new URLSearchParams(location.search);\n  const isSortingHandler= queryParams.get('sort')=== 'asc';\n  const sortedQuotes = sortQuotes(props.quotes, isSortingHandler);\n\n  const changeSortingHandler=()=>{\n    history.push({\n\n      pathname : location.pathname,\n      search : `?sort=${(isSortingHandler ? 'desc ' : 'asc')}`\n    \n    \n    \n    \n   \n  \n  });\n\n  }\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortingHandler ? 'Descending' : 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"]},"metadata":{},"sourceType":"module"}