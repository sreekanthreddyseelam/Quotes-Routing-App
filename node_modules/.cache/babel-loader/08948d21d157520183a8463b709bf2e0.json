{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\Quotes-Routingproject\\\\src\\\\pages\\\\QuoteDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { Route, useParams, useRouteMatch } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/hooks/use-http\";\nimport { getSingleQuote } from \"../lib/lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuoteDetails() {\n  _s();\n\n  const match = useRouteMatch();\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (!loadedQuote.text) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Quote Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: loadedQuote.text,\n      author: loadedQuote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuoteDetails, \"9oA6TaFDNtyzXPIyN8bTJvanQSo=\", false, function () {\n  return [useRouteMatch, useParams, useHttp];\n});\n\n_c = QuoteDetails;\nexport default QuoteDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetails\");","map":{"version":3,"sources":["E:/react/Quotes-Routingproject/src/pages/QuoteDetails.js"],"names":["React","Fragment","useEffect","Route","useParams","useRouteMatch","Link","Comments","HighlightedQuote","LoadingSpinner","useHttp","getSingleQuote","QuoteDetails","match","params","quoteId","sendRequest","status","data","loadedQuote","error","text","author","path","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,cAAhD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAASC,cAAT,QAA+B,gBAA/B;;;AACA,SAASC,YAAT,GAAwB;AAAA;;AAEtB,QAAMC,KAAK,GAAGR,aAAa,EAA3B;AACA,QAAMS,MAAM,GAAGV,SAAS,EAAxB;AAEA,QAAM;AAACW,IAAAA;AAAD,MAAYD,MAAlB;AACA,QAAM;AAAEE,IAAAA,WAAF;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,IAAI,EAAEC,WAA7B;AAA0CC,IAAAA;AAA1C,MAAoDV,OAAO,CAC/DC,cAD+D,EAE/D,IAF+D,CAAjE;AAIAT,EAAAA,SAAS,CAAC,MAAI;AACZc,IAAAA,WAAW,CAACD,OAAD,CAAX;AACD,GAFQ,EAEN,CAACC,WAAD,EAAaD,OAAb,CAFM,CAAT;;AAIA,MAAGE,MAAM,KAAK,SAAd,EACF;AACA,wBAAQ;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BAA0B,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAA;AAAA;AAAA;AAAA,YAAR;AACC;;AACD,MAAGG,KAAH,EAAS;AACP,wBAAO;AAAG,MAAA,SAAS,EAAC,UAAb;AAAA,gBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEC,MAAI,CAACD,WAAW,CAACE,IAAjB,EAAuB;AACrB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEF,WAAW,CAACE,IAApC;AAA0C,MAAA,MAAM,EAAEF,WAAW,CAACG;AAA9D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAET,KAAK,CAACU,IAAK,EAA3B;AAA8B,MAAA,KAAK,MAAnC;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,GAAEV,KAAK,CAACW,GAAI,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEX,KAAK,CAACU,IAAK,WAA3B;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAzCQX,Y;UAEOP,a,EACCD,S,EAG2CM,O;;;KANnDE,Y;AA2CT,eAAeA,YAAf","sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport { Route, useParams, useRouteMatch } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/lib/api\";\r\nfunction QuoteDetails() {\r\n  \r\n  const match = useRouteMatch();\r\n  const params = useParams();\r\n  \r\n  const {quoteId} = params;\r\n  const { sendRequest, status, data: loadedQuote, error } = useHttp(\r\n    getSingleQuote,\r\n    true\r\n  );\r\n  useEffect(()=>{\r\n    sendRequest(quoteId)\r\n  }, [sendRequest,quoteId]);\r\n\r\n  if(status === 'pending')\r\n{\r\nreturn  <div className=\"centered\"><LoadingSpinner/></div>\r\n}\r\nif(error){\r\n  return <p className='centered'>{error}</p>\r\n}\r\n \r\n  if (!loadedQuote.text) {\r\n    return <p>No Quote Found</p>;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Route path={`${match.path}`} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default QuoteDetails;\r\n"]},"metadata":{},"sourceType":"module"}