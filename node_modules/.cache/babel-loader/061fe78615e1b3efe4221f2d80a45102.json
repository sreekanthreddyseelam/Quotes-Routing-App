{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\Quotes-Routingproject\\\\src\\\\pages\\\\QuoteDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from \"react\";\nimport { Route, useParams, useRouteMatch } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuoteDetails() {\n  _s();\n\n  const DUMMY_QUOTES = [{\n    id: 'q1',\n    author: 'Sreekanth',\n    text: ' Dont comment bad code - rewrite it'\n  }, {\n    id: 'q2',\n    author: 'Reddy',\n    text: ' One main scrappy software is another mans full time job'\n  }];\n  const params = useParams();\n  const match = useRouteMatch();\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quotesId);\n\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Quote Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `/NewQuotes/${match.url}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuoteDetails, \"Z/bFVfTt127x9UIB6x9JiYH3soU=\", false, function () {\n  return [useParams, useRouteMatch];\n});\n\n_c = QuoteDetails;\nexport default QuoteDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetails\");","map":{"version":3,"sources":["E:/react/Quotes-Routingproject/src/pages/QuoteDetails.js"],"names":["React","Fragment","Route","useParams","useRouteMatch","Link","Comments","HighlightedQuote","QuoteDetails","DUMMY_QUOTES","id","author","text","params","match","quote","find","quotesId","path","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,aAA3B,QAAgD,cAAhD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA8B,uCAA9B;;;AACA,SAASC,YAAT,GAAwB;AAAA;;AAEtB,QAAMC,YAAY,GAAG,CACnB;AAACC,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,MAAM,EAAE,WAAlB;AAA+BC,IAAAA,IAAI,EAAC;AAApC,GADmB,EAEnB;AAACF,IAAAA,EAAE,EAAC,IAAJ;AAAUC,IAAAA,MAAM,EAAE,OAAlB;AAA2BC,IAAAA,IAAI,EAAC;AAAhC,GAFmB,CAArB;AAMA,QAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAMW,KAAK,GAAGV,aAAa,EAA3B;AACA,QAAMW,KAAK,GAAGN,YAAY,CAACO,IAAb,CAAkBD,KAAK,IAAIA,KAAK,CAACL,EAAN,KAAaG,MAAM,CAACI,QAA/C,CAAd;;AACA,MAAG,CAACF,KAAJ,EAAU;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAEA;;AACD,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEA,KAAK,CAACH,IAA9B;AAAoC,MAAA,MAAM,EAAEG,KAAK,CAACJ;AAAlD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEG,KAAK,CAACI,IAAK,EAA3B;AAA8B,MAAA,KAAK,MAAnC;AAAA,6BACA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACA,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,cAAaJ,KAAK,CAACK,GAAI,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEL,KAAK,CAACI,IAAK,WAA3B;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA/BQV,Y;UAQQL,S,EACDC,a;;;KATPI,Y;AAiCT,eAAeA,YAAf","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { Route, useParams, useRouteMatch } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote  from \"../components/quotes/HighlightedQuote\";\r\nfunction QuoteDetails() {\r\n\r\n  const DUMMY_QUOTES = [\r\n    {id:'q1', author: 'Sreekanth', text:' Dont comment bad code - rewrite it'},\r\n    {id:'q2', author: 'Reddy', text:' One main scrappy software is another mans full time job'},\r\n    \r\n  ]\r\n\r\n  const params = useParams();\r\n  const match = useRouteMatch()\r\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quotesId)\r\n  if(!quote){\r\n   return <p>No Quote Found</p>\r\n    \r\n  }\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={quote.text} author={quote.author}  />\r\n      <Route path={`${match.path}`} exact>\r\n      <div className=\"centered\">\r\n      <Link className='btn--flat' to={`/NewQuotes/${match.url}/comments`}>Load Comments</Link>\r\n      </div>\r\n\r\n      </Route>\r\n      \r\n\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default QuoteDetails;\r\n"]},"metadata":{},"sourceType":"module"}